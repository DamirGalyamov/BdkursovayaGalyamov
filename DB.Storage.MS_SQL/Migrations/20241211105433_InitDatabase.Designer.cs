// <auto-generated />
using System;
using DB.Storage.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Storage.MS_SQL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241211105433_InitDatabase")]
    partial class InitDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DB.Storage.Models.Belt_characteristic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Loginlinear_density")
                        .HasColumnType("float");

                    b.Property<string>("profile_type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("sectional_area")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Belt_Characteristics");
                });

            modelBuilder.Entity("DB.Storage.Models.Enter_value", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("C3")
                        .HasColumnType("float");

                    b.Property<double>("F")
                        .HasColumnType("float");

                    b.Property<double>("Z")
                        .HasColumnType("float");

                    b.Property<double>("alpha1")
                        .HasColumnType("float");

                    b.Property<string>("belt_type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("profile_type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("xi")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Enter_Values");
                });

            modelBuilder.Entity("DB.Storage.Models.Out_value", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Enter_ValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Enter_valuesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Q0")
                        .HasColumnType("float");

                    b.Property<double>("R")
                        .HasColumnType("float");

                    b.Property<double>("sigma0")
                        .HasColumnType("float");

                    b.Property<double>("teta")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Enter_ValueId");

                    b.ToTable("Out_Values");
                });

            modelBuilder.Entity("DB.Storage.Models.Phi0", b =>
                {
                    b.Property<Guid>("EnterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Enter_ValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("enter_phi0")
                        .HasColumnType("float");

                    b.HasKey("EnterId");

                    b.HasIndex("Enter_ValueId");

                    b.ToTable("Phi0s");
                });

            modelBuilder.Entity("DB.Storage.Models.Sig0", b =>
                {
                    b.Property<Guid>("EnterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Enter_ValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("enter_sig0")
                        .HasColumnType("float");

                    b.HasKey("EnterId");

                    b.HasIndex("Enter_ValueId");

                    b.ToTable("Sig0s");
                });

            modelBuilder.Entity("DB.Storage.Models.kofC1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("C1")
                        .HasColumnType("float");

                    b.Property<double>("alpha1")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("KofC1s");
                });

            modelBuilder.Entity("DB.Storage.Models.Out_value", b =>
                {
                    b.HasOne("DB.Storage.Models.Enter_value", "Enter_Value")
                        .WithMany()
                        .HasForeignKey("Enter_ValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enter_Value");
                });

            modelBuilder.Entity("DB.Storage.Models.Phi0", b =>
                {
                    b.HasOne("DB.Storage.Models.Enter_value", "Enter_Value")
                        .WithMany()
                        .HasForeignKey("Enter_ValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enter_Value");
                });

            modelBuilder.Entity("DB.Storage.Models.Sig0", b =>
                {
                    b.HasOne("DB.Storage.Models.Enter_value", "Enter_Value")
                        .WithMany()
                        .HasForeignKey("Enter_ValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enter_Value");
                });
#pragma warning restore 612, 618
        }
    }
}
